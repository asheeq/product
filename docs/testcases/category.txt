GET /categories

1.
Fetch all categories
Request:
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892681445,
    "data": [
        {
            "id": "1",
            "name": "sampleName",
            "description": "sampleDescription",
            "createdBy": "admin",
            "updatedBy": null,
            "createdAt": "2020-05-11T14:58:22.000Z",
            "updatedAt": "2020-05-11T14:58:22.000Z"
        },
        {
            "id": "2",
            "name": "sampleName2",
            "description": "DescriptionUpdatedfor2",
            "createdBy": "admin",
            "updatedBy": "admin",
            "createdAt": "2020-05-11T14:58:45.000Z",
            "updatedAt": "2020-05-12T05:22:20.000Z"
        },
        {
            "id": "3",
            "name": "sampleName3",
            "description": "descUpdated",
            "createdBy": "admin",
            "updatedBy": "admin",
            "createdAt": "2020-05-11T15:29:15.000Z",
            "updatedAt": "2020-05-12T07:00:15.000Z"
        },
        {
            "id": "4",
            "name": "sampleName4",
            "description": "sampleDescription4",
            "createdBy": "admin",
            "updatedBy": null,
            "createdAt": "2020-05-11T16:00:04.000Z",
            "updatedAt": "2020-05-11T16:00:04.000Z"
        },
        {
            "id": "6",
            "name": "sampleName5",
            "description": "sampleDescription5",
            "createdBy": "admin",
            "updatedBy": null,
            "createdAt": "2020-05-11T16:20:30.000Z",
            "updatedAt": "2020-05-11T16:20:30.000Z"
        },
        {
            "id": "7",
            "name": "sampleName6",
            "description": "sampleDescription6",
            "createdBy": "admin",
            "updatedBy": null,
            "createdAt": "2020-05-11T16:21:56.000Z",
            "updatedAt": "2020-05-11T16:21:56.000Z"
        }
    ]
}

2.
Fetch a category with id param
Request: ?id=4
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892681972,
    "data": [
        {
            "id": "4",
            "name": "sampleName4",
            "description": "sampleDescription4",
            "createdBy": "admin",
            "updatedBy": null,
            "createdAt": "2020-05-11T16:00:04.000Z",
            "updatedAt": "2020-05-11T16:00:04.000Z"
        }
    ]
}

3.
Fetch a category with name param
Request: ?name=sampleName2
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892682599,
    "data": [
        {
            "id": "2",
            "name": "sampleName2",
            "description": "DescriptionUpdatedfor2",
            "createdBy": "admin",
            "updatedBy": "admin",
            "createdAt": "2020-05-11T14:58:45.000Z",
            "updatedAt": "2020-05-12T05:22:20.000Z"
        }
    ]
}

4.
Fetch with non-existent id param
Request: ?id=20
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892741272,
    "data": []
}

5.
Fetch with non-existent name param
Request: ?name=sampleName20
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892742078,
    "data": []
}

POST /categories

1.
Create a new category
Request: {
    "name": "sampleName8",
    "description": "sampleDescription",
    "createdBy": "admin"
}
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892683771,
    "data": [
        {
            "id": "8",
            "name": "sampleName8",
            "description": "sampleDescription",
            "createdBy": "admin",
            "updatedBy": null,
            "createdAt": "2020-05-12T07:26:17.000Z",
            "updatedAt": "2020-05-12T07:26:17.000Z"
        }
    ]
}

2.
Create category without description
Request:{
    "name": "sampleName10",
    "createdBy": "admin"
}
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892745222,
    "data": [
        {
            "id": "10",
            "name": "sampleName10",
            "description": null,
            "createdBy": "admin",
            "updatedBy": null,
            "createdAt": "2020-05-12T09:08:42.000Z",
            "updatedAt": "2020-05-12T09:08:42.000Z"
        }
    ]
}

3.
Duplication of name throws exception
Request: {
    "name": "sampleName8",
    "description": "sampleDescription",
    "createdBy": "admin"
}
Response: {
    "status": 400,
    "code": 1,
    "title": "Bad Request",
    "details": "Duplicate Category name",
    "timestamp": 15892743220
}

PUT /categories

1.
Update a category
Request: {
    "id": "3"
    "name": "sampleName3",
    "description": "descUpdatedFor3",
    "updatedBy": "admin"
}
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892685462,
    "data": [
        {
            "id": "3",
            "name": "sampleName3",
            "description": "descUpdatedFor3",
            "createdBy": "admin",
            "updatedBy": "admin",
            "createdAt": "2020-05-11T15:29:15.000Z",
            "updatedAt": "2020-05-12T07:29:06.000Z"
        }
    ]
}

2.
Update a category name without description
Request: {
    "id": "3"
    "name": "sampleName3updated",
    "updatedBy": "admin"
}
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892687001,
    "data": [
        {
            "id": "3",
            "name": "sampleName3updated",
            "description": "descUpdatedFor3",
            "createdBy": "admin",
            "updatedBy": "admin",
            "createdAt": "2020-05-11T15:29:15.000Z",
            "updatedAt": "2020-05-12T07:31:40.000Z"
        }
    ]
}

3.
Update a category description
Request: {
    "id": "3"
    "description": "newDescription",
    "updatedBy": "admin"
}
Response: {
    "status": 200,
    "code": 0,
    "title": "Success",
    "details": "Success",
    "timestamp": 15892688378,
    "data": [
        {
            "id": "3",
            "name": "sampleName3updated",
            "description": "newDescription",
            "createdBy": "admin",
            "updatedBy": "admin",
            "createdAt": "2020-05-11T15:29:15.000Z",
            "updatedAt": "2020-05-12T07:33:57.000Z"
        }
    ]
}

4.
Update a category with non-existent id throws invalid category id exception
Request: {
    "id": "20"
    "name": "sampleName3",
    "description": "descUpdatedFor3",
    "updatedBy": "admin"
}
Response: {
    "status": 400,
    "code": 3,
    "title": "Bad Request",
    "details": "Invalid Category Id",
    "timestamp": 15892747062
}

5.
Update a category with duplicate name throws duplicate category name exception
Request: {
    "id": "3"
    "name": "sampleName2",
    "description": "descUpdatedFor3",
    "updatedBy": "admin"
}
Response: {
    "status": 400,
    "code": 1,
    "title": "Bad Request",
    "details": "Duplicate Category name",
    "timestamp": 15892748479
}

6. 
Update without changing either name or description throws exception
Request: {
    "id": "3"
    "updatedBy": "admin"
}
Response: {
    "status": 400,
    "code": 1,
    "title": "Bad Request",
    "details": "\"value\" must contain at least one of [name, description]",
    "timestamp": 15892749862
}
